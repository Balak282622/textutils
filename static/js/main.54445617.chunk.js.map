{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","aboutText","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","charAt","slice","split","i","length","join","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","element","createElement","file","Blob","URL","createObjectURL","download","body","appendChild","click","parseFloat","toFixed","defaultProps","Alert","alert","word","lower","capitalize","msg","App","setMode","setAlert","message","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.54445617.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/about\">\r\n                {props.aboutText}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = { \r\n    title: PropTypes.string.isRequired, \r\n    aboutText: PropTypes.string.isRequired\r\n};\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set Title Here',\r\n    aboutText: 'About text here'\r\n}","import React ,{useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert('Converted to upper case','success')\r\n    }\r\n\r\n    const handleLoClick = ()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert('Converted to lower case','success')\r\n    }\r\n\r\n    const handleClear = ()=>{\r\n        let newText = \"\";\r\n        setText(newText)\r\n        props.showAlert('text cleared','success')\r\n    }\r\n    \r\n    const handleCapitalize = ()=>{\r\n        let newText = text.charAt(0).toUpperCase() + text.slice(1).toLowerCase() ;\r\n        setText(newText)\r\n        props.showAlert('text capitalized','success')\r\n    }\r\n\r\n    const handleCapitalizeEachWord = ()=>{\r\n        let newText = text.split(' ')\r\n        for (let i = 0; i < newText.length; i++) {\r\n            newText[i] =  newText[i].charAt(0).toUpperCase() + newText[i].slice(1);\r\n        }\r\n        setText(newText.join(\" \"))\r\n        props.showAlert('each word capitalized','success')\r\n    }\r\n    \r\n    const handleCopy = ()=>{\r\n        let text = document.getElementById('myBox')\r\n        text.select();\r\n        text.setSelectionRange(0,9999)\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert('text copied','success')\r\n    }\r\n\r\n    const handleToWord = ()=>{\r\n        const element = document.createElement(\"a\");\r\n        const file = new Blob([text],    \r\n            {type: 'text/plain;charset=utf-8'});\r\n        element.href = URL.createObjectURL(file);\r\n        element.download = \"myFile.docx\";\r\n        document.body.appendChild(element);\r\n        element.click()\r\n        props.showAlert('Converted to word file','success')\r\n    }\r\n\r\n    const handleRemoveExtraSpace = () => {\r\n        let newText = text.split(/[ ]+/)\r\n        setText(newText.join(\" \"))\r\n        props.showAlert('Extra spaces removed','success')\r\n\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n   \r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode === 'dark' ? 'white' : '#0f1d3e'}}>\r\n            <h1>{props.heading} </h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode === 'dark' ? 'rgb(15 44 63 / 0.88)' : 'white', color: props.mode === 'dark' ? '#c9f90b' : 'black'}} id=\"myBox\" rows=\"10\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary m-1\" onClick={handleUpClick}>\r\n                CONVERT TO UPPERCASE\r\n            </button>\r\n            <button className=\"btn btn-primary m-1\" onClick={handleLoClick}>\r\n                convert to lowercase\r\n            </button>\r\n            <button className=\"btn btn-primary m-1\" onClick={handleCapitalize}>\r\n                Capitalize\r\n            </button>\r\n            <button className=\"btn btn-primary m-1\" onClick={handleCapitalizeEachWord}>\r\n                Capitalize Each Word\r\n            </button>\r\n            <button className=\"btn btn-primary m-1\" onClick={handleClear}>\r\n                Clear Text\r\n            </button>\r\n            <button className=\"btn btn-primary m-1\" onClick={handleCopy}>\r\n                Copy Text\r\n            </button>\r\n            <button className=\"btn btn-primary m-1\" onClick={handleToWord}>\r\n                Save to Word file\r\n            </button>\r\n            <button className=\"btn btn-primary m-1\" onClick={handleRemoveExtraSpace}>\r\n                Remove extra spaces\r\n            </button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color: props.mode === 'dark' ? 'white' : 'black'}}>\r\n            <h1>Your text summary</h1>\r\n            <p>{text.split(\" \").length} Words and {text.length} Characters</p>\r\n            <p>{parseFloat(0.008 * text.split(\"\").length).toFixed(2)} Minutes to read</p>\r\n            <h2>Preview</h2>\r\n            <p style={text.length === 0?{color: props.mode === 'dark' ? 'white' : 'black'}:{color: props.mode === 'dark' ? '#c9f90b' : 'black'}}>{text.length > 0 ? text : \"Enter something in the text box above to preview it\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n    <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from 'react'\nimport Alert from \"./components/Alert\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n//   // Link\n// } from \"../node_modules/react-router-dom\";\n\n\n// import TextForm from \"./components/TextForm\";\n\nfunction App() {\n  const [mode, setMode] = useState('light'); //if dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1250);\n  }\n\n  const  toggleMode = ()=>{\n    if (mode === 'light'){\n      setMode ('dark')\n      document.body.style.backgroundColor = ('#0f1d3e')\n      showAlert('Dark mode is enabled','success')\n      // document.title = 'Text Utils - Dark Mode'\n    }\n    else{\n      setMode ('light')\n      document.body.style.backgroundColor = ('white')\n      showAlert('light mode is enabled','success')\n      // document.title = 'Text Utils - Light Mode'\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n      {/* <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" /> */}\n      <Navbar title = \"TextUtils\" aboutText = 'About' mode={mode} toggleMode={toggleMode}/>\n      <Alert alert = {alert}/>\n      <div className=\"container my-3\">        \n      {/* <Switch> */}\n          {/* <Route exact path=\"/about\" >\n            <About />\n          </Route> */}\n\n          {/* <Route exact path=\"/\" > */}\n          <TextForm showAlert = {showAlert} heading=\"Enter the text to analyze\" mode={mode} />\n            \n          {/* </Route>\n        </Switch> */}\n\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}